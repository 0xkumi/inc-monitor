{"version":3,"sources":["theme/Theme.selector.ts","theme/Theme.tsx","modules/MainRoute/MainRoute.enhance.tsx","modules/MainRoute/MainRoute.tsx","configs/Configs.selector.ts","components/Header/index.tsx","redux/store.ts","app/App.enhance.tsx","app/App.tsx","reportWebVitals.ts","index.tsx","modules/NodeMonitor/components/Table/Table.actionsName.ts","modules/NodeMonitor/components/MonitorDetail/MonitorDetail.actionsName.ts","modules/NodeMonitor/components/Table/Table.utils.ts","components/Row/index.ts","modules/RedList/components/Table/TableValidator.actionsName.ts","i18/en.ts","theme/Theme.reducer.ts","configs/Configs.reducer.ts","components/ErrorBoundary/index.tsx","components/Text/index.tsx","components/Icons/AppLogo/index.tsx","components/Icons/Close/index.tsx","modules/NodeMonitor/components/Table/Table.constants.ts","modules/RedList/components/Table/TableValidator.constants.ts","i18/index.ts","modules/NodeMonitor/NodeMonitor.route.ts","modules sync //.route.tsx?","modules/Home/Home.route.tsx","modules/NodeMonitor/components/MonitorDetail/MonitorDetail.route.tsx","modules/RedList/RedList.route.tsx","../src sync //.reducer.ts","modules/NodeMonitor/components/MonitorDetail/MonitorDetail.reducer.ts","modules/NodeMonitor/components/Table/Table.reducer.ts","modules/RedList/components/Table/TableValidator.reducer.ts"],"names":["themeSelector","createSelector","state","theme","darkModeSelector","darkMode","MEDIA_WIDTHS","upToExtraSmall","upToSmall","upToMedium","upToLarge","mediaWidthTemplates","Object","keys","reduce","accumulator","size","a","b","c","css","white","black","colors","headerRow","hoverRow","darkRow","lightRow","modalBg","border1","border2","text1","text2","text3","green1","red1","styled","Text","color","ThemeProvider","children","useSelector","themeObject","useMemo","grids","sm","md","lg","mediaWidth","flexColumnNoWrap","flexRowNoWrap","appTheme","FixedGlobalStyle","createGlobalStyle","ThemedGlobalStyle","context","require","enhance","WrappedComponent","props","React","useState","routes","setRoutes","handleGetRoutes","allRoutes","map","path","push","default","useEffect","then","Styled","div","isWebview","MainRoute","getMiningPublicKey","fallback","route","key","memo","configsSelector","configs","translateSelector","translateByLanguage","language","appTranslateSelector","translate","app","nodeMonitor","reuse","HeaderFrame","Row","WrapLogo","activeClassName","StyledNavLink","NavLink","attrs","WrapLink","Header","appTranslate","fontSize","marginLeft","company","id","to","preloadedState","requireModule","reducers","forEach","fileName","reducerName","camelCase","match","error","console","debug","rootReducers","combineReducers","persistConfig","storage","whitelist","blacklist","persistedReducer","persistReducer","middlewareEnhancer","applyMiddleware","thunk","logger","store","createStore","persistor","persistStore","configStore","ErrorBoundary","loading","history","createBrowserHistory","App","withApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","config","ReactDOM","render","StrictMode","document","getElementById","ACTION_CHANGE_PAGE","ACTION_CHANGE_ROWS_PER_PAGE","ACTION_CHANGE_LIMIT_PAGE","ACTION_UPDATE_TABLE_DATA","ACTION_FETCHING_TABLE_DATA","ACTION_UPDATE_SEARCH_VALUE","ACTION_CHANGE_VISIBLE_MODAL","ACTION_UPDATE_MONITOR_DETAIL","ACTION_UPDATE_SYNC_STAT","ACTION_UPDATE_STATUS_FETCHING","ACTION_UPDATE_COMMITTEE_INFO","ACTION_CLEAR_MONITOR_DETAIL","getParamsNodesInfo","search","currentPage","rowPerPage","t","startIndex","endIndex","listNodes","uniqBy","split","filter","value","isEmpty","item","arrayRaw","trim","publicKey","name","length","element","totalRows","result","slice","prevValue","index","strKeys","mapper","concat","mpk","window","URLSearchParams","location","get","e","getVoteStat","votes","join","Box","width","align","justify","padding","border","borderRadius","gap","colon","initialState","reducer","action","type","stateReconciler","autoMergeLevel2","componentDidCatch","errorInfo","log","hasError","this","message","JSON","stringify","Component","getDerivedStateFromError","TextWrapper","TextMedium","fontWeight","TextBold","Logo","AppLogo","className","button","CloseVector","height","viewBox","style","cursor","d","fill","fillRule","Close","DEFAULT_LIMIT_ROWS","EMPTY_CELL","ROWS_PER_PAGE","en","nodeMonitorRoute","exact","component","lazy","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports","monitorRoute","node","undefined","syncStat","fetching","committee","payload","committeeInfo","rowsPerPage","limitPage","data","isSearching","visibleModal","page","searching","visible"],"mappings":"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","file":"static/js/main.ad518443.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\nimport { IRootState } from 'src/redux/interface';\nimport { IThemeReducer } from './Theme.reducer';\n\nexport const themeSelector = createSelector(\n    (state: IRootState) => state.theme,\n    (theme: IThemeReducer) => theme,\n);\n\nexport const darkModeSelector = createSelector(themeSelector, (theme) => theme.darkMode);\n","import React, { useMemo } from 'react';\nimport styled, {\n    ITheme,\n    ThemeProvider as StyledComponentsThemeProvider,\n    createGlobalStyle,\n    css,\n} from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { Text, TextProps } from 'rebass';\nimport { Colors } from './Theme.styled';\nimport { darkModeSelector } from './Theme.selector';\n\nconst MEDIA_WIDTHS = {\n    upToExtraSmall: 500,\n    upToSmall: 720,\n    upToMedium: 960,\n    upToLarge: 1280,\n};\n\nconst mediaWidthTemplates: { [width in keyof typeof MEDIA_WIDTHS]: typeof css } = Object.keys(MEDIA_WIDTHS).reduce(\n    (accumulator, size) => {\n        (accumulator as any)[size] = (a: any, b: any, c: any) => css`\n            @media (max-width: ${(MEDIA_WIDTHS as any)[size]}px) {\n                ${css(a, b, c)}\n            }\n        `;\n        return accumulator;\n    },\n    {},\n) as any;\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport function colors(darkMode: boolean): Colors {\n    return {\n        // base\n        white,\n        black,\n\n        // table\n        headerRow: darkMode ? '#f5f5f5' : '#f5f5f5',\n        hoverRow: darkMode ? '#e0e0e0' : '#e0e0e0',\n        darkRow: darkMode ? '#fafafa' : '#fafafa',\n        lightRow: darkMode ? '#e0e0e0' : '#e0e0e0',\n\n        // modal\n        modalBg: darkMode ? 'rgba(0,0,0,.425)' : 'rgba(0,0,0,0.3)',\n\n        border1: darkMode ? '#CBCBCB' : '#CBCBCB',\n        border2: darkMode ? '#E0E0E0' : '#E0E0E0',\n\n        // text\n        text1: darkMode ? white : black,\n        text2: darkMode ? '#9e9e9e' : '#9e9e9e',\n        text3: darkMode ? '#616161' : '#616161',\n\n        green1: darkMode ? '#34C759' : '#34C759',\n        red1: darkMode ? '#FE4D4D' : '#FE4D4D',\n    };\n}\n\nexport function appTheme(darkMode: boolean): ITheme {\n    return {\n        ...colors(darkMode),\n\n        grids: {\n            sm: 8,\n            md: 12,\n            lg: 24,\n        },\n\n        // media queries\n        mediaWidth: mediaWidthTemplates,\n\n        // css snippets\n        flexColumnNoWrap: css`\n            display: flex;\n            flex-flow: column nowrap;\n        `,\n        flexRowNoWrap: css`\n            display: flex;\n            flex-flow: row nowrap;\n        `,\n    };\n}\n\nconst TextWrapper = styled(Text)<{ color: keyof Colors }>`\n    color: ${({ color, theme }) => (theme as any)[color]};\n`;\n\nexport const TYPE = {\n    main(props: TextProps) {\n        return <TextWrapper fontWeight={500} color=\"black\" {...props} />;\n    },\n    link(props: TextProps) {\n        return <TextWrapper fontWeight={500} color=\"black\" {...props} />;\n    },\n};\n\nexport const ThemeProvider = ({ children }: { children: React.ReactNode }) => {\n    const darkMode = useSelector(darkModeSelector);\n\n    const themeObject = useMemo(() => appTheme(darkMode), [darkMode]);\n\n    return <StyledComponentsThemeProvider theme={themeObject}>{children}</StyledComponentsThemeProvider>;\n};\n\nexport const FixedGlobalStyle = createGlobalStyle`\nhtml, input, textarea, button {\n  font-family: 'Inter', sans-serif;\n  font-display: fallback;\n}\n@supports (font-variation-settings: normal) {\n  html, input, textarea, button {\n    font-family: 'Inter var', sans-serif;\n  }\n}\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n a {\n   color: ${colors(false).black}; \n }\n\n* {\n  box-sizing: border-box;\n}\n\nbutton {\n  user-select: none;\n}\n\nhtml {\n  font-size: 16px;\n  font-variant: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  font-feature-settings: 'ss01' on, 'ss02' on, 'cv01' on, 'cv03' on;\n}\n`;\n\nexport const ThemedGlobalStyle = createGlobalStyle`\n    body {\n      min-height: 100vh;\n      box-sizing: border-box;\n    }\n`;\n","import React, { FunctionComponent } from 'react';\nimport { IRouteProps } from 'src/modules';\n\nconst context = require.context('src/modules', true, /\\.route.tsx?/);\n\nconst enhance = (WrappedComponent: FunctionComponent) => (props: any) => {\n    const [routes, setRoutes] = React.useState<Array<IRouteProps>>([]);\n\n    const handleGetRoutes = async () => {\n        const allRoutes: IRouteProps[] = [];\n        context.keys().map((path) => allRoutes.push(context(`${path}`).default));\n        setRoutes([...allRoutes]);\n    };\n    React.useEffect(() => {\n        handleGetRoutes().then();\n    }, []);\n\n    return <WrappedComponent {...props} routes={routes} />;\n};\n\nexport default enhance;\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { IRouteProps } from 'src/modules';\nimport styled from 'styled-components';\nimport { getMiningPublicKey } from 'src/modules/NodeMonitor/components/Table/Table.utils';\nimport enhance from './MainRoute.enhance';\nimport { IProps } from './MainRoute.inteface';\n\nconst Styled = styled.div<{ isWebview: boolean }>`\n    margin: ${({ isWebview }: { isWebview: boolean }) => (isWebview ? '3px' : '30px')};\n`;\n\nconst MainRoute = (props: IProps & any) => {\n    const { routes } = props;\n    return (\n        <Styled isWebview={!!getMiningPublicKey()}>\n            <Switch>\n                <Suspense fallback={null}>\n                    {routes.map((route: IRouteProps) => (\n                        <Route {...route} key={route.path} />\n                    ))}\n                </Suspense>\n            </Switch>\n        </Styled>\n    );\n};\n\nexport default enhance(React.memo(MainRoute));\n","import { createSelector } from 'reselect';\nimport { IRootState } from 'src/redux/interface';\nimport { IConfigsReducer } from 'src/configs';\nimport { translateByLanguage } from 'src/i18';\n\nexport const configsSelector = createSelector(\n    (state: IRootState) => state.configs,\n    (configs: IConfigsReducer) => configs,\n);\n\nexport const translateSelector = createSelector(configsSelector, (configs) => translateByLanguage(configs.language));\n\nexport const appTranslateSelector = createSelector(translateSelector, (translate) => translate.app);\n\nexport const nodeMonitorTranslateSelector = createSelector(translateSelector, (translate) => translate.nodeMonitor);\n\nexport const reuseTranslateSelector = createSelector(translateSelector, (translate) => translate.reuse);\n","import React from 'react';\nimport styled, { ITheme } from 'styled-components';\nimport Row from 'src/components/Row';\nimport { AppLogo } from 'src/components/Icons';\nimport { TextBold } from 'src/components';\nimport { useSelector } from 'react-redux';\nimport { appTranslateSelector } from 'src/configs';\nimport { getMiningPublicKey } from 'src/modules/NodeMonitor/components/Table/Table.utils';\nimport { NavLink } from 'react-router-dom';\n\nconst HeaderFrame = styled(Row)`\n    justify-content: space-between;\n    padding: 30px 30px 0 30px;\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: flex-start;\n    `}\n`;\n\nconst WrapLogo = styled(Row)`\n    cursor: pointer;\n    width: fit-content;\n`;\n\nconst activeClassName = 'ACTIVE';\nconst StyledNavLink = styled(NavLink).attrs({\n    activeClassName,\n})`\n    outline: none;\n    cursor: pointer;\n    text-decoration: none;\n    color: ${({ theme }) => theme.text1};\n    font-size: 15px;\n    width: fit-content;\n    margin: 0 12px;\n    font-weight: 500;\n    border-radius: 8px;\n    padding: 5px 15px;\n    border: 1px solid ${({ theme }: { theme: ITheme }) => theme.border2};\n\n    &.${activeClassName} {\n        font-weight: 600;\n        background-color: ${({ theme }) => theme.black};\n        color: ${({ theme }) => theme.white};\n    }\n`;\n\nconst WrapLink = styled(Row)`\n    cursor: pointer;\n    width: fit-content;\n`;\n\nconst Header = React.memo(() => {\n    const appTranslate = useSelector(appTranslateSelector);\n    if (getMiningPublicKey()) return null;\n    return (\n        <HeaderFrame>\n            <WrapLogo>\n                <AppLogo />\n                <TextBold fontSize={20} marginLeft={10}>\n                    {appTranslate.company}\n                </TextBold>\n            </WrapLogo>\n            <WrapLink>\n                <StyledNavLink id=\"stake-nav-link\" to=\"/node-monitor\">\n                    Monitor\n                </StyledNavLink>\n                <StyledNavLink id=\"stake-nav-1\" to=\"/red-list\">\n                    Red list\n                </StyledNavLink>\n            </WrapLink>\n        </HeaderFrame>\n    );\n});\n\nexport default Header;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport { camelCase } from 'lodash';\n\nexport interface IConfigStore {\n    store: any;\n    persistor: any;\n}\n\nexport const configStore = (preloadedState: any = {}) => {\n    const requireModule = require.context('../../src', true, /\\.reducer.ts/); // extract [reducerName].reducer.ts files inside redux folder\n    const reducers: any = {};\n    requireModule.keys().forEach((fileName: any) => {\n        try {\n            const reducerName = camelCase(fileName?.match(/(\\w{1,})(.reducer.ts)/)[1]);\n            reducers[reducerName] = requireModule(fileName).default;\n        } catch (error) {\n            console.debug(`ERROR`, error);\n        }\n    });\n    const rootReducers = combineReducers({\n        ...reducers,\n    });\n    const persistConfig = {\n        key: 'root',\n        storage,\n        whitelist: [],\n        blacklist: ['config'],\n    };\n    const persistedReducer = persistReducer(persistConfig, rootReducers);\n    const middlewareEnhancer = applyMiddleware(thunk, logger);\n    const store: any = createStore(persistedReducer, preloadedState, middlewareEnhancer);\n    const persistor = persistStore(store);\n    return { store, persistor };\n};\n","import React, { FunctionComponent } from 'react';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { Provider } from 'react-redux';\nimport { configStore, IConfigStore } from 'src/redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport styled from 'styled-components';\n\nconst { store, persistor }: IConfigStore = configStore();\n\nconst Styled = styled.div``;\n\nconst enhance = (WrappedComponent: FunctionComponent) => (props: any) => {\n    return (\n        <ErrorBoundary>\n            <Provider store={store}>\n                <PersistGate loading={<div>...</div>} persistor={persistor}>\n                    <Styled>{!!store && <WrappedComponent {...props} />}</Styled>\n                </PersistGate>\n            </Provider>\n        </ErrorBoundary>\n    );\n};\n\nexport default enhance;\n","import React from 'react';\nimport { createBrowserHistory } from 'history';\nimport { Router } from 'react-router';\nimport MainRoute from 'src/modules/MainRoute/MainRoute';\nimport { ThemeProvider, ThemedGlobalStyle } from 'src/theme';\nimport Header from 'src/components/Header';\nimport withApp from './App.enhance';\nimport './reset.scss';\n\nconst history = createBrowserHistory();\n\nconst App: React.FunctionComponent = () => {\n    return (\n        <ThemeProvider>\n            <ThemedGlobalStyle />\n            <Router history={history}>\n                <Header />\n                <MainRoute />\n            </Router>\n        </ThemeProvider>\n    );\n};\n\nexport default withApp(React.memo(App));\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FixedGlobalStyle } from 'src/theme';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nrequire('dotenv').config();\n\nReactDOM.render(\n    <React.StrictMode>\n        <FixedGlobalStyle />\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\nreportWebVitals();\n","export const ACTION_CHANGE_PAGE = '$TABLE_NODE_MONITOR_ACTION_CHANGE_PAGE';\nexport const ACTION_CHANGE_ROWS_PER_PAGE = '$TABLE_NODE_MONITOR_ACTION_CHANGE_ROWS_PER_PAGE';\nexport const ACTION_CHANGE_LIMIT_PAGE = '$TABLE_NODE_MONITOR_ACTION_CHANGE_LIMIT_PAGE';\nexport const ACTION_UPDATE_TABLE_DATA = '$TABLE_NODE_MONITOR_ACTION_UPDATE_TABLE_DATA';\nexport const ACTION_FETCHING_TABLE_DATA = '$TABLE_NODE_MONITOR_ACTION_FETCHING_TABLE_DATA';\nexport const ACTION_UPDATE_SEARCH_VALUE = '$TABLE_NODE_MONITOR_ACTION_UPDATE_SEARCH_VALUE';\nexport const ACTION_CHANGE_VISIBLE_MODAL = '$TABLE_NODE_MONITOR_ACTION_CHANGE_VISIBLE_MODAL';\n","export const ACTION_UPDATE_MONITOR_DETAIL = '$MONITOR_DETAIL_ACTION_UPDATE_MONITOR_DETAIL';\nexport const ACTION_UPDATE_SYNC_STAT = '$MONITOR_DETAIL_ACTION_UPDATE_SYNC_STAT';\nexport const ACTION_UPDATE_STATUS_FETCHING = '$MONITOR_DETAIL_ACTION_UPDATE_STATUS_FETCHING';\nexport const ACTION_UPDATE_COMMITTEE_INFO = '$MONITOR_DETAIL_ACTION_UPDATE_COMMITTEE_INFO';\nexport const ACTION_CLEAR_MONITOR_DETAIL = '$MONITOR_DETAIL_ACTION_CLEAR_MONITOR_DETAIL';\n","import { trim, uniqBy, isEmpty } from 'lodash';\n\nexport const getURLPathname = () => {\n    if (typeof window === 'undefined') {\n        return '';\n    }\n    return window.location.pathname;\n};\n\nexport const getURLSearchParams = (search?: string) => {\n    if (typeof window === 'undefined') {\n        return {};\n    }\n    return new URLSearchParams(search || window.location.search);\n};\n\nexport const splitLines = (t: string) => {\n    return t.split(/\\r\\n|\\r|\\n/);\n};\n\nexport const getParamsNodesInfo = (search: string, currentPage: number, rowPerPage: number) => {\n    const startIndex = currentPage * rowPerPage;\n    const endIndex = startIndex + rowPerPage;\n    let listNodes = uniqBy(\n        splitLines(search)\n            .filter((value) => !isEmpty(value))\n            .map((item: string) => {\n                const rawValue = trim(item);\n                const arrayRaw = rawValue.split(' ');\n                let publicKey = '';\n                let name = '';\n                if (arrayRaw.length === 1) {\n                    publicKey = `${arrayRaw[0]}`;\n                }\n                if (arrayRaw.length === 2) {\n                    publicKey = `${arrayRaw[1]}`;\n                    name = `${arrayRaw[0]}`;\n                }\n                return { name, publicKey };\n            }),\n        (element) => {\n            return element.publicKey;\n        },\n    );\n    const totalRows = listNodes.length;\n    listNodes = listNodes.slice(startIndex, endIndex);\n    const result = listNodes.reduce(\n        (prevValue: any, element: any, index) => {\n            let { strKeys, mapper } = prevValue;\n            const { name, publicKey } = element;\n            strKeys += publicKey + (index === listNodes.length - 1 ? '' : ',');\n            mapper = mapper.concat([\n                {\n                    name,\n                    publicKey,\n                },\n            ]);\n            return { strKeys, mapper };\n        },\n        { strKeys: '', mapper: [] },\n    );\n    return {\n        ...result,\n        totalRows,\n    };\n};\n\nexport const getMiningPublicKey = () => {\n    let mpk = '';\n    try {\n        const urlParams: any = getURLSearchParams();\n        mpk = urlParams.get('mpk');\n    } catch (e) {\n        console.debug('Cant get mpk');\n    }\n    return mpk;\n};\n\nexport const getVoteStat = (votes: any) => (votes || []).join('\\n');\n","import styled from 'styled-components';\nimport { Box } from 'rebass/styled-components';\n\nconst Row = styled(Box)<{\n    width?: string;\n    align?: string;\n    justify?: string;\n    padding?: string;\n    border?: string;\n    borderRadius?: string;\n}>`\n    width: ${({ width }) => width ?? '100%'};\n    display: flex;\n    padding: 0;\n    align-items: ${({ align }) => align ?? 'center'};\n    justify-content: ${({ justify }) => justify ?? 'flex-start'};\n    padding: ${({ padding }) => padding};\n    border: ${({ border }) => border};\n    border-radius: ${({ borderRadius }) => borderRadius};\n`;\n\nexport const RowBetween = styled(Row)`\n    justify-content: space-between;\n`;\n\nexport const RowFlat = styled.div`\n    display: flex;\n    align-items: flex-end;\n`;\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n    flex-wrap: wrap;\n    margin: ${({ gap }) => gap && `-${gap}`};\n    justify-content: ${({ justify }) => justify && justify};\n    & > * {\n        margin: ${({ gap }) => gap} !important;\n    }\n`;\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n    width: fit-content;\n    margin: ${({ gap }) => gap && `-${gap}`};\n`;\n\nexport default Row;\n","export const ACTION_CHANGE_PAGE = '$TABLE_NODE_VALIDATOR_ACTION_CHANGE_PAGE';\nexport const ACTION_CHANGE_ROWS_PER_PAGE = '$TABLE_NODE_VALIDATOR_ACTION_CHANGE_ROWS_PER_PAGE';\nexport const ACTION_CHANGE_LIMIT_PAGE = '$TABLE_NODE_VALIDATOR_ACTION_CHANGE_LIMIT_PAGE';\nexport const ACTION_UPDATE_TABLE_DATA = '$TABLE_NODE_VALIDATOR_ACTION_UPDATE_TABLE_DATA';\nexport const ACTION_FETCHING_TABLE_DATA = '$TABLE_NODE_VALIDATOR_ACTION_FETCHING_TABLE_DATA';\nexport const ACTION_UPDATE_SEARCH_VALUE = '$TABLE_NODE_VALIDATOR_ACTION_UPDATE_SEARCH_VALUE';\nexport const ACTION_CHANGE_VISIBLE_MODAL = '$TABLE_NODE_VALIDATOR_ACTION_CHANGE_VISIBLE_MODAL';\n","import { ILanguage } from './interface';\n\nconst language: ILanguage = {\n    app: {\n        company: 'Incognito',\n    },\n    nodeMonitor: {},\n    reuse: {\n        search: 'Search',\n        colon: ':',\n    },\n};\n\nexport default language;\n","export interface IThemeReducer {\n    darkMode: boolean;\n}\n\nconst initialState: IThemeReducer = {\n    darkMode: false,\n};\n\nconst reducer = (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    },\n) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nimport { persistReducer } from 'redux-persist';\n\nexport interface IConfigsReducer {\n    auth?: {\n        deviceId: string;\n        deviceToken: string;\n    };\n    language: string;\n}\n\nconst initialState: IConfigsReducer = {\n    language: 'en',\n};\n\nconst configReducer = (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    },\n) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};\n\nconst persistConfig = {\n    key: 'config',\n    storage,\n    whitelist: ['auth'],\n    stateReconciler: autoMergeLevel2,\n};\n\nexport default persistReducer(persistConfig, configReducer);\n","import React from 'react';\n\ninterface IProps {}\n\ninterface IState {\n    hasError: boolean;\n    error: any;\n}\n\nclass ErrorBoundary extends React.Component<IProps, IState> {\n    constructor(props: any) {\n        super(props);\n        this.state = { hasError: false, error: {} };\n    }\n\n    static getDerivedStateFromError = (error: any) => {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true, error };\n    };\n\n    componentDidCatch = (error: any, errorInfo: any) => {\n        // You can also log the error to an error reporting service\n        console.log(error, errorInfo);\n    };\n\n    render() {\n        const { hasError, error } = this.state;\n        const { children } = this.props;\n        if (hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong. {error?.message || JSON.stringify(error)}</h1>;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import styled from 'styled-components';\nimport { Text, TextProps } from 'rebass';\nimport { Colors } from 'src/theme/Theme.styled';\nimport React from 'react';\n\nconst TextWrapper = styled(Text)<{ color: keyof Colors }>`\n    color: ${({ color, theme }) => (theme as any)[color]};\n`;\n\nexport const TextRegular = (props: TextProps) => (\n    <TextWrapper fontSize={15} fontWeight={400} color=\"text1\" {...props} />\n);\n\nexport const TextMedium = (props: TextProps) => <TextWrapper fontSize={15} fontWeight={500} color=\"text1\" {...props} />;\n\nexport const TextBold = (props: TextProps) => <TextWrapper fontSize={15} fontWeight={700} color=\"text1\" {...props} />;\n","import React from 'react';\nimport styled, { ITheme } from 'styled-components';\n\nconst Logo = styled.div<{ size: number }>`\n    width: ${({ size }) => `${size}px`};\n    height: ${({ size }) => `${size}px`};\n    border-radius: ${({ size }) => `${size / 2}px`};;\n    background-color ${({ theme }: { theme: ITheme }) => theme.black};\n`;\n\ninterface IProps {\n    size?: number;\n}\n\nconst AppLogo = React.memo((props: IProps) => {\n    const { size = 40 } = props;\n    return <Logo className=\"app-logo\" size={size} />;\n});\n\nexport default AppLogo;\n","import React, { memo } from 'react';\nimport styled from 'styled-components';\n\nconst Styled = styled.button``;\n\nconst CloseVector = (props: any) => {\n    return (\n        <svg width=\"13\" height=\"13\" viewBox=\"0 0 16 16\" {...props} style={{ cursor: 'pointer' }}>\n            <path\n                d=\"M15.725 15.45a.884.884 0 000-1.231l-6.25-6.26 6.25-6.25a.875.875 0 000-1.23.878.878 0 00-1.24 0l-6.25 6.25-6.25-6.25a.87.87 0 00-1.24 0 .884.884 0 000 1.23l6.25 6.25-6.25 6.26a.875.875 0 000 1.23.897.897 0 001.24 0l6.25-6.25 6.25 6.25c.331.332.908.342 1.24 0z\"\n                fill=\"#000\"\n                fillRule=\"nonzero\"\n            />\n        </svg>\n    );\n};\n\nconst Close = (props: React.ButtonHTMLAttributes<HTMLButtonElement> & any) => {\n    return (\n        <Styled className=\"close-icon\">\n            <CloseVector {...props} />\n        </Styled>\n    );\n};\n\nexport default memo(Close);\n","export const DEFAULT_LIMIT_ROWS = 7;\nexport const EMPTY_CELL = '-';\n","export const ROWS_PER_PAGE = 7;\n","import { IObject } from 'src/utils';\nimport en from './en';\n\nexport * from './interface';\n\nexport const translateByLanguage = (language: string) => {\n    switch (language) {\n        case 'en':\n            return en;\n        default:\n            return en;\n    }\n};\n\nexport const languages = { en };\n\nexport const isoLanguages: IObject = {\n    en: {\n        name: 'English',\n        nativeName: 'English',\n    },\n    vi: {\n        name: 'Vietnamese',\n        nativeName: 'Tiếng Việt',\n    },\n};\n\nexport const languagesSupport = () =>\n    Object.keys(languages).map((code) => ({\n        ...isoLanguages[code],\n        code,\n    }));\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/modules';\n\nconst nodeMonitorRoute: IRouteProps = {\n    path: '/node-monitor',\n    exact: true,\n    component: lazy(() => import('./NodeMonitor')),\n    name: 'NodeMonitor',\n    to: '/node-monitor',\n};\n\nexport const route = '/node-monitor';\n\nexport default nodeMonitorRoute;\n","var map = {\n\t\"./Home/Home.route.tsx\": 88,\n\t\"./NodeMonitor/NodeMonitor.route.ts\": 74,\n\t\"./NodeMonitor/components/MonitorDetail/MonitorDetail.route.tsx\": 89,\n\t\"./RedList/RedList.route.tsx\": 90\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 87;","import { lazy } from 'react';\nimport { IRouteProps } from 'src/modules';\n\nconst nodeMonitorRoute: IRouteProps = {\n    path: '/',\n    exact: true,\n    component: lazy(() => import('src/modules/Home')),\n    name: 'Home',\n    to: '/',\n};\n\nexport const route = '/';\n\nexport default nodeMonitorRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/modules';\n\nconst monitorRoute: IRouteProps = {\n    path: '/monitor-detail',\n    exact: true,\n    component: lazy(() => import('./MonitorDetail')),\n    name: 'MonitorDetail',\n    to: '/monitor-detail',\n};\n\nexport const route = '/monitor-detail';\n\nexport default monitorRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/modules';\n\nconst nodeMonitorRoute: IRouteProps = {\n    path: '/red-list',\n    exact: true,\n    component: lazy(() => import('./RedList')),\n    name: 'RedList',\n    to: '/red-list',\n};\n\nexport const route = '/red-list';\n\nexport default nodeMonitorRoute;\n","var map = {\n\t\"./configs/Configs.reducer.ts\": 42,\n\t\"./modules/NodeMonitor/components/MonitorDetail/MonitorDetail.reducer.ts\": 96,\n\t\"./modules/NodeMonitor/components/Table/Table.reducer.ts\": 97,\n\t\"./modules/RedList/components/Table/TableValidator.reducer.ts\": 98,\n\t\"./theme/Theme.reducer.ts\": 41\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 95;","import { persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage';\nimport { IMonitorDetailReducer, ISyncStat } from './MonitorDetail.interface';\nimport {\n    ACTION_CLEAR_MONITOR_DETAIL,\n    ACTION_UPDATE_COMMITTEE_INFO,\n    ACTION_UPDATE_MONITOR_DETAIL,\n    ACTION_UPDATE_STATUS_FETCHING,\n    ACTION_UPDATE_SYNC_STAT,\n} from './MonitorDetail.actionsName';\n\nconst initialState: IMonitorDetailReducer = {\n    node: undefined,\n    syncStat: undefined,\n    fetching: false,\n    committee: undefined,\n};\n\nconst monitorDetailReducer = (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    },\n) => {\n    switch (action.type) {\n        case ACTION_UPDATE_MONITOR_DETAIL: {\n            const { node } = action.payload;\n            return {\n                ...state,\n                node,\n            };\n        }\n        case ACTION_UPDATE_SYNC_STAT: {\n            const { syncStat } = action.payload;\n            return {\n                ...state,\n                syncStat,\n            };\n        }\n        case ACTION_UPDATE_STATUS_FETCHING: {\n            const { fetching } = action.payload;\n            return {\n                ...state,\n                fetching,\n            };\n        }\n        case ACTION_UPDATE_COMMITTEE_INFO: {\n            const { committeeInfo } = action.payload;\n            return {\n                ...state,\n                committee: committeeInfo,\n            };\n        }\n        case ACTION_CLEAR_MONITOR_DETAIL: {\n            return {\n                ...state,\n                ...initialState,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nconst persistConfig = {\n    key: 'monitorDetail',\n    storage,\n    whitelist: [''],\n    stateReconciler: autoMergeLevel2,\n};\n\nexport default persistReducer(persistConfig, monitorDetailReducer);\n","import { persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage';\nimport { ITableReducer } from './Table.interface';\nimport {\n    ACTION_CHANGE_LIMIT_PAGE,\n    ACTION_CHANGE_ROWS_PER_PAGE,\n    ACTION_CHANGE_PAGE,\n    ACTION_UPDATE_TABLE_DATA,\n    ACTION_FETCHING_TABLE_DATA,\n    ACTION_UPDATE_SEARCH_VALUE,\n    ACTION_CHANGE_VISIBLE_MODAL,\n} from './Table.actionsName';\nimport { DEFAULT_LIMIT_ROWS } from './Table.constants'; // defaults to localStorage for web\n\nconst initialState: ITableReducer = {\n    currentPage: 0,\n    rowsPerPage: DEFAULT_LIMIT_ROWS,\n    limitPage: 0,\n    data: [],\n    fetching: false,\n    isSearching: false,\n    search: '',\n    visibleModal: false,\n};\n\nconst tableReducer = (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    },\n) => {\n    switch (action.type) {\n        case ACTION_CHANGE_PAGE: {\n            const { page } = action.payload;\n            return {\n                ...state,\n                currentPage: page,\n            };\n        }\n        case ACTION_CHANGE_LIMIT_PAGE: {\n            const { limitPage } = action.payload;\n            return {\n                ...state,\n                limitPage,\n            };\n        }\n        case ACTION_CHANGE_ROWS_PER_PAGE: {\n            const { rowsPerPage } = action.payload;\n            return {\n                ...state,\n                rowsPerPage,\n            };\n        }\n        case ACTION_UPDATE_TABLE_DATA: {\n            return {\n                ...state,\n                ...action.payload,\n            };\n        }\n        case ACTION_FETCHING_TABLE_DATA: {\n            const { fetching, isSearching: searching } = action.payload;\n            return {\n                ...state,\n                fetching,\n                isSearching: searching || state?.isSearching,\n            };\n        }\n        case ACTION_UPDATE_SEARCH_VALUE: {\n            const { search } = action.payload;\n            return {\n                ...state,\n                search,\n            };\n        }\n        case ACTION_CHANGE_VISIBLE_MODAL: {\n            const { visible } = action.payload;\n            return {\n                ...state,\n                visibleModal: visible || !state?.visibleModal,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nconst persistConfig = {\n    key: 'tableNodeMonitor',\n    storage,\n    whitelist: ['search'],\n    stateReconciler: autoMergeLevel2,\n};\n\nexport default persistReducer(persistConfig, tableReducer);\n","import { persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage';\nimport { ROWS_PER_PAGE } from './TableValidator.constants';\nimport {\n    ACTION_CHANGE_VISIBLE_MODAL,\n    ACTION_FETCHING_TABLE_DATA,\n    ACTION_UPDATE_TABLE_DATA,\n} from './TableValidator.actionsName';\nimport { ITableValidatorReducer } from './TableValidator.interface';\n\nconst initialState: ITableValidatorReducer = {\n    currentPage: 0,\n    rowsPerPage: ROWS_PER_PAGE,\n    limitPage: 0,\n    data: [],\n    fetching: false,\n    visibleModal: false,\n};\n\nconst tableRedListReducer = (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    },\n) => {\n    switch (action.type) {\n        case ACTION_UPDATE_TABLE_DATA: {\n            const { payload } = action;\n            return {\n                ...state,\n                ...payload,\n            };\n        }\n        case ACTION_CHANGE_VISIBLE_MODAL: {\n            const { visible } = action.payload;\n            return {\n                ...state,\n                visibleModal: visible,\n            };\n        }\n        case ACTION_FETCHING_TABLE_DATA: {\n            const { fetching } = action.payload;\n            return {\n                ...state,\n                fetching,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nconst persistConfig = {\n    key: 'tableRedList',\n    storage,\n    whitelist: [''],\n    stateReconciler: autoMergeLevel2,\n};\n\nexport default persistReducer(persistConfig, tableRedListReducer);\n"],"sourceRoot":""}