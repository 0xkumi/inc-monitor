{"version":3,"sources":["modules/NodeMonitor/components/MonitorDetail/MonitorDetail.selector.ts","components/Table/styled.tsx","components/Table/index.tsx","modules/NodeMonitor/components/MonitorDetail/components/CommitteeActivity/styled.tsx","modules/NodeMonitor/components/MonitorDetail/components/CommitteeActivity/CommitteeActivity.tsx","modules/NodeMonitor/components/MonitorDetail/components/BeaconList/BeaconList.enhance.tsx","modules/NodeMonitor/components/MonitorDetail/components/BeaconList/BeaconList.tsx","modules/NodeMonitor/components/MonitorDetail/MonitorDetail.styled.tsx","modules/NodeMonitor/components/ColumnText/index.tsx","modules/NodeMonitor/components/MonitorDetail/MonitorDetail.enhanceCommittee.tsx","modules/NodeMonitor/components/MonitorDetail/MonitorDetail.enhanceSyncStat.tsx","modules/NodeMonitor/components/MonitorDetail/MonitorDetail.enhance.tsx","modules/NodeMonitor/components/RowText/index.tsx","modules/NodeMonitor/components/MonitorDetail/MonitorDetail.tsx","modules/NodeMonitor/components/MonitorDetail/MonitorDetail.actions.ts","modules/NodeMonitor/NodeMonitor.mockupData.ts","components/LoadingOverlay/index.tsx","services/http.ts","modules/NodeMonitor/components/Table/Table.services.ts","utils/ellipsis.ts","modules/NodeMonitor/components/Table/Table.builder.ts","configs/Configs.Envs.ts","services/configs.ts"],"names":["monitorDetailSelector","createSelector","state","monitorDetail","Styled","styled","div","theme","darkRow","headerRow","Table","React","memo","props","columns","data","showHeader","useTable","getTableProps","headerGroups","rows","prepareRow","Card","className","TableHead","map","headerGroup","TableRow","getHeaderGroupProps","headers","column","TableCell","getHeaderProps","render","TableBody","row","index","getRowProps","cells","cell","getCellProps","CommitteeActivity","committee","useSelector","isEmpty","MockupColumnsCommittee","enhance","WrappedComponent","syncStat","ErrorBoundary","beacon","shards","RowWrapper","Row","border2","isEven","MockupColumnsBeacon","renderItem","item","style","flex","textAlign","name","blockHeight","color","message","display","width","isWebview","ColumnText","title","content","fontSize","mt","withCommittee","WrappedComp","dispatch","useDispatch","useEffect","actionFetchCommitteeActivity","withSyncStat","actionFetchSyncStat","compose","useState","setIsWebview","mpk","getMiningPublicKey","actionFetchNodeSyncInfo","handleOpenNewTab","RowText","ml","MonitorDetail","node","fetching","publicKey","role","committeeChain","shardName","autoStake","getStatus","status","syncState","LoadingOverlay","actionUpdateMonitorDetail","payload","type","ACTION_UPDATE_MONITOR_DETAIL","actionClearMonitorDetail","ACTION_CLEAR_MONITOR_DETAIL","actionUpdateStatusFetching","ACTION_UPDATE_STATUS_FETCHING","getState","a","NodesSyncStatBuilder","getSyncStatInfo","ACTION_UPDATE_SYNC_STAT","console","debug","NodesCommitteeInfoBuilder","getCommitteeInfo","committeeInfo","ACTION_UPDATE_COMMITTEE_INFO","NodesInfoBuilder","getListNodesInfo","MockupColumns","accessor","Header","instance","axios","create","timeout","HEADERS","interceptors","request","use","req","baseURL","API_NODE_MONITOR_URL","error","Promise","reject","response","res","result","Error","resolve","isAxiosError","publicKeys","http","post","ellipsisCenter","str","limit","dots","size","length","substring","formatNodeInfo","Role","CommitteeChain","EMPTY_CELL","MiningPubkey","capitalize","Status","SyncState","voteStats","getVoteStat","VoteStat","ellipsisMpk","AutoStake","NodesListBuilder","dataMapper","mapper","nodeName","find","element","isArray","getStatusMessage","prefix","suffix","IsSync","LastInsert","moment","fromNow","Date","now","getTime","Shard","Beacon","beaconMessage","beaconColor","isSync","lastInsert","BlockHeight","blockTime","BlockTime","blockHash","BlockHash","Object","keys","key","shardMessage","shardStatusColor","chainId","ChainId","voteCount","TotalPropose","Math","round","TotalVote","epoch","Epoch","reward","Reward","time","Time","totalPropose","totalVote","ChainID","defaultEnvs","REACT_APP_IS_MAINNET","REACT_APP_VERSION","REACT_APP_IS_DEV","FAST_REFRESH","API_NODE_BASE_URL","envs","PROCCESS_ENV","process","forEach","value","REACT_APP_DOMAIN_URL","window","location","origin","getEnvs","API_NODE_VALIDATOR_URL"],"mappings":"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","file":"static/js/1.2e68e2d5.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\nimport { IRootState } from 'src/redux/interface';\nimport { IMonitorDetailReducer } from './MonitorDetail.interface';\n\nexport const monitorDetailSelector = createSelector(\n    (state: IRootState) => state.monitorDetail,\n    (monitorDetail: IMonitorDetailReducer) => monitorDetail,\n);\n","import styled, { ITheme } from 'styled-components';\n\nexport const Styled = styled.div`\n    .card {\n        overflow: auto;\n    }\n    .table-cell {\n        min-width: 100px;\n    }\n    .dark-row {\n        background-color: ${({ theme }: { theme: ITheme }) => theme.darkRow};\n    }\n    .table-row {\n        cursor: pointer;\n        > td {\n            text-align: center;\n        }\n    }\n    .header-row {\n        background-color: ${({ theme }: { theme: ITheme }) => theme.headerRow};\n        th {\n            font-weight: bold;\n            text-align: center;\n        }\n    }\n`;\n","import React from 'react';\nimport { Card } from '@material-ui/core';\nimport { useTable } from 'react-table';\nimport MaUTable from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport { Styled } from './styled';\n\ninterface IProps {\n    columns?: any[];\n    showHeader?: boolean;\n    data: any[];\n}\n\nconst Table = React.memo((props: IProps) => {\n    const { columns, data, showHeader } = props;\n    const { getTableProps, headerGroups, rows, prepareRow } = useTable({\n        columns: columns || [],\n        data: data || [],\n    });\n\n    const renderHeader = () => (\n        <TableHead>\n            {headerGroups.map((headerGroup) => (\n                <TableRow className=\"header-row\" {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map((column) => (\n                        <TableCell {...column.getHeaderProps()}>{column.render('Header')}</TableCell>\n                    ))}\n                </TableRow>\n            ))}\n        </TableHead>\n    );\n\n    const renderBody = () => (\n        <TableBody>\n            {rows.map((row, index) => {\n                prepareRow(row);\n                return (\n                    <TableRow className={`table-row ${index % 2 !== 0 ? 'dark-row' : ''}`} {...row.getRowProps()}>\n                        {row.cells.map((cell) => {\n                            return (\n                                <TableCell className=\"table-cell\" {...cell.getCellProps()}>\n                                    {cell.render('Cell')}\n                                </TableCell>\n                            );\n                        })}\n                    </TableRow>\n                );\n            })}\n        </TableBody>\n    );\n\n    return (\n        <Styled>\n            <Card className=\"card\">\n                <MaUTable {...getTableProps()}>\n                    {!!showHeader && renderHeader()}\n                    {renderBody()}\n                </MaUTable>\n            </Card>\n        </Styled>\n    );\n});\n\nexport default Table;\n","import styled from 'styled-components';\n\nexport const Styled = styled.div``;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { MockupColumnsCommittee } from 'src/modules/NodeMonitor/NodeMonitor.mockupData';\nimport { monitorDetailSelector } from 'src/modules/NodeMonitor/components/MonitorDetail/MonitorDetail.selector';\nimport Table from 'src/components/Table';\nimport { isEmpty } from 'lodash';\nimport { Styled } from './styled';\n\nconst CommitteeActivity = React.memo(() => {\n    const { committee } = useSelector(monitorDetailSelector);\n    if (isEmpty(committee)) return null;\n    return (\n        <Styled>\n            <Table data={committee} columns={MockupColumnsCommittee} showHeader />\n        </Styled>\n    );\n});\n\nexport default CommitteeActivity;\n","import React from 'react';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { useSelector } from 'react-redux';\nimport { monitorDetailSelector } from 'src/modules/NodeMonitor/components/MonitorDetail/MonitorDetail.selector';\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: any) => {\n    const { syncStat } = useSelector(monitorDetailSelector);\n    return (\n        <ErrorBoundary>\n            <WrappedComponent\n                {...{\n                    ...props,\n                    beacon: syncStat?.beacon,\n                    shards: syncStat?.shards,\n                }}\n            />\n        </ErrorBoundary>\n    );\n};\n\nexport default enhance;\n","import React, { memo } from 'react';\nimport styled, { ITheme } from 'styled-components';\nimport Row from 'src/components/Row';\nimport Card from '@material-ui/core/Card';\nimport { TextBold, TextMedium } from 'src/components';\nimport { IBeacon, IShard } from 'src/modules/NodeMonitor/components/MonitorDetail/MonitorDetail.interface';\nimport { isEmpty } from 'lodash';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport { useTable } from 'react-table';\nimport { MockupColumnsBeacon } from 'src/modules/NodeMonitor/NodeMonitor.mockupData';\nimport enhance from './BeaconList.enhance';\n\nconst Styled = styled.div`\n    width: 100%;\n    > div:last-child {\n        border-bottom-width: 0;\n        margin-bottom: 10px;\n    }\n    .header-row {\n        background-color: ${({ theme }: { theme: ITheme }) => theme.headerRow};\n        th {\n            font-weight: bold;\n            text-align: center;\n        }\n    }\n`;\n\nconst RowWrapper = styled(Row)<{ isEven: boolean }>`\n    width: 100%;\n    justify-content: space-between;\n    border-left-width: 0;\n    border-right-width: 0;\n    border-top-width: 0;\n    border-bottom: 1px solid ${({ theme }: { theme: ITheme }) => `${theme.border2}`};\n    padding: 10px 0;\n    background-color: ${({ theme, isEven }: { theme: ITheme; isEven: boolean }) =>\n        isEven ? 'transparent' : theme.darkRow};\n    > div {\n        min-width: 100px;\n    }\n`;\n\ninterface IProps {\n    beacon: IBeacon;\n    shards: IShard[];\n}\n\nconst BeaconList = memo((props: IProps & any) => {\n    const { beacon, shards } = props;\n    const { headerGroups } = useTable({\n        columns: MockupColumnsBeacon || [],\n        data: [],\n    });\n    const renderItem = (item: any, index: number) => {\n        return (\n            <RowWrapper isEven={index % 2 !== 0} key={item?.name}>\n                <TextBold style={{ flex: 2, textAlign: 'center' }}>{item?.name}</TextBold>\n                <TextMedium style={{ flex: 2, textAlign: 'center' }}>{item?.blockHeight}</TextMedium>\n                <TextMedium style={{ flex: 3, textAlign: 'center' }} color={item?.color}>\n                    {item?.message}\n                </TextMedium>\n            </RowWrapper>\n        );\n    };\n    if (isEmpty(beacon) || isEmpty(shards)) return null;\n    const renderContent = () => (\n        <>\n            {renderItem(beacon, 1)}\n            {shards.map(renderItem)}\n        </>\n    );\n\n    const renderHeader = () => (\n        <TableHead style={{ display: 'flex', width: '100%' }}>\n            {headerGroups.map((headerGroup) => {\n                return (\n                    <TableRow\n                        style={{ display: 'flex', flex: 1 }}\n                        className=\"header-row\"\n                        {...headerGroup.getHeaderGroupProps()}\n                    >\n                        {headerGroup.headers.map((column, index) => {\n                            const flex = index === 2 ? 3 : 2;\n                            return (\n                                <TableCell style={{ flex, textAlign: 'center' }} {...column.getHeaderProps()}>\n                                    {column.render('Header')}\n                                </TableCell>\n                            );\n                        })}\n                    </TableRow>\n                );\n            })}\n        </TableHead>\n    );\n    return (\n        <Card>\n            <Styled>\n                {renderHeader()}\n                {renderContent()}\n            </Styled>\n        </Card>\n    );\n});\n\nexport default enhance(BeaconList);\n","import styled from 'styled-components';\n\nexport const Styled = styled.div<{ isWebview: boolean }>`\n    overflow: auto;\n    padding: ${({ isWebview }: { isWebview: boolean }) => (isWebview ? `3px` : `0 20px 20px 20px`)};\n    > div {\n        margin-top: 20px;\n    }\n    .wrap-loading {\n        padding-bottom: 20px;\n    }\n`;\n","import React, { memo } from 'react';\nimport { TextMedium, TextBold } from 'src/components';\nimport styled from 'styled-components';\n\nconst Styled = styled.div`\n    div:last-child {\n        line-break: anywhere;\n    }\n`;\n\ninterface IProps {\n    title: string;\n    content: string;\n}\n\nconst ColumnText = (props: IProps) => {\n    const { title, content } = props;\n    return (\n        <Styled>\n            <TextBold fontSize={16}>{title}</TextBold>\n            <TextMedium fontSize={16} mt={10} color=\"text2\">\n                {content}\n            </TextMedium>\n        </Styled>\n    );\n};\n\nexport default memo(ColumnText);\n","import React from 'react';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { useDispatch } from 'react-redux';\nimport { actionFetchCommitteeActivity } from 'src/modules/NodeMonitor/components/MonitorDetail/MonitorDetail.actions';\n\nconst withCommittee = (WrappedComp: React.FunctionComponent) => (props: any) => {\n    const dispatch = useDispatch();\n\n    const handleFetchCommitteeActivity = () => dispatch(actionFetchCommitteeActivity());\n\n    React.useEffect(() => {\n        handleFetchCommitteeActivity();\n    }, []);\n\n    return (\n        <ErrorBoundary>\n            <WrappedComp\n                {...{\n                    ...props,\n                }}\n            />\n        </ErrorBoundary>\n    );\n};\n\nexport default withCommittee;\n","import { useDispatch } from 'react-redux';\nimport React from 'react';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { actionFetchSyncStat } from './MonitorDetail.actions';\n\nconst withSyncStat = (WrappedComponent: React.FunctionComponent) => (props: any) => {\n    const dispatch = useDispatch();\n    const handleFetchSyncState = () => dispatch(actionFetchSyncStat());\n\n    React.useEffect(() => {\n        handleFetchSyncState();\n    }, []);\n\n    return (\n        <ErrorBoundary>\n            <WrappedComponent\n                {...{\n                    ...props,\n                }}\n            />\n        </ErrorBoundary>\n    );\n};\n\nexport default withSyncStat;\n","import React from 'react';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { compose } from 'recompose';\nimport { isEmpty } from 'lodash';\nimport { useDispatch } from 'react-redux';\nimport withCommittee from './MonitorDetail.enhanceCommittee';\nimport withSyncStat from './MonitorDetail.enhanceSyncStat';\nimport { getMiningPublicKey } from '../Table/Table.utils';\nimport { actionFetchNodeSyncInfo } from './MonitorDetail.actions';\n\ninterface IProps {\n    isWebview: boolean;\n}\nconst enhance = (WrappedComp: React.FunctionComponent) => (props: IProps & any) => {\n    const dispatch = useDispatch();\n    const [isWebview, setIsWebview] = React.useState(false);\n    const handleOpenNewTab = () => {\n        const mpk = getMiningPublicKey();\n        if (isEmpty(mpk)) return;\n        setIsWebview(true);\n        dispatch(actionFetchNodeSyncInfo(mpk));\n    };\n\n    React.useEffect(() => {\n        handleOpenNewTab();\n    }, []);\n    return (\n        <ErrorBoundary>\n            <WrappedComp\n                {...{\n                    ...props,\n                    isWebview,\n                }}\n            />\n        </ErrorBoundary>\n    );\n};\n\nexport default compose(withSyncStat, withCommittee, enhance);\n","import React, { memo } from 'react';\nimport { TextMedium, TextBold } from 'src/components';\nimport styled from 'styled-components';\n\nconst Styled = styled.div`\n    display: inline-flex;\n    div:last-child {\n        line-break: anywhere;\n    }\n`;\n\ninterface IProps {\n    title: string;\n    content: string;\n}\n\nconst RowText = (props: IProps) => {\n    const { title, content } = props;\n    return (\n        <Styled>\n            <TextBold fontSize={16}>{title}</TextBold>\n            <TextMedium fontSize={16} ml=\"8px\" color=\"text2\">\n                {content}\n            </TextMedium>\n        </Styled>\n    );\n};\n\nexport default memo(RowText);\n","import React from 'react';\nimport { BeaconList, CommitteeActivity } from 'src/modules/NodeMonitor/components/MonitorDetail/components';\nimport { useSelector } from 'react-redux';\nimport LoadingOverlay from 'src/components/LoadingOverlay';\nimport { isEmpty } from 'lodash';\nimport { Styled } from './MonitorDetail.styled';\nimport ColumnText from '../ColumnText';\nimport { monitorDetailSelector } from './MonitorDetail.selector';\nimport enhance from './MonitorDetail.enhance';\nimport RowText from '../RowText';\n\ninterface IProps {\n    isWebview: boolean;\n}\n\nconst MonitorDetail = React.memo(({ isWebview }: IProps & any) => {\n    const { node, fetching } = useSelector(monitorDetailSelector);\n    const renderContent = () => (\n        <>\n            <BeaconList />\n            <CommitteeActivity />\n        </>\n    );\n\n    const getStatus = () => {\n        if (!node) return '';\n        if (\n            isEmpty(node?.role) ||\n            node?.role === '-' ||\n            node.role === 'Not stake' ||\n            node.committeeChain === 'Not stake'\n        )\n            return 'Not stake';\n        let shardName = `${node?.role} Shard ${node.committeeChain}`;\n        if (!node?.autoStake) {\n            shardName += ` (unstaking)`;\n        }\n        return shardName;\n    };\n\n    return (\n        <Styled isWebview={isWebview}>\n            {!!node && (\n                <>\n                    {!!node.name && <ColumnText title=\"Name\" content={node.name} />}\n                    <ColumnText title=\"Validator Public key\" content={node.publicKey} />\n                    <ColumnText title=\"Status\" content={getStatus()} />\n                    <RowText title=\"Sync state:\" content={node.status === 'Offline' ? 'Offline' : node.syncState} />\n                </>\n            )}\n            {fetching ? <LoadingOverlay /> : renderContent()}\n        </Styled>\n    );\n});\n\nexport default enhance(MonitorDetail);\n","import { Dispatch } from 'redux';\nimport { IRootState } from 'src/redux/interface';\nimport { ITableData } from 'src/modules/NodeMonitor/components/Table/Table.interface';\nimport {\n    ACTION_UPDATE_COMMITTEE_INFO,\n    ACTION_UPDATE_MONITOR_DETAIL,\n    ACTION_UPDATE_STATUS_FETCHING,\n    ACTION_UPDATE_SYNC_STAT,\n    ACTION_CLEAR_MONITOR_DETAIL,\n} from './MonitorDetail.actionsName';\nimport { getCommitteeInfo, getListNodesInfo, getSyncStatInfo } from '../Table/Table.services';\nimport { NodesCommitteeInfoBuilder, NodesInfoBuilder, NodesSyncStatBuilder } from '../Table/Table.builder';\nimport { ISyncStat } from './MonitorDetail.interface';\n\nexport const actionUpdateMonitorDetail = (payload: { node?: ITableData }) => ({\n    type: ACTION_UPDATE_MONITOR_DETAIL,\n    payload,\n});\n\nexport const actionClearMonitorDetail = () => ({\n    type: ACTION_CLEAR_MONITOR_DETAIL,\n});\n\nexport const actionUpdateSyncStat = (payload: { syncStat?: ISyncStat }) => ({\n    type: ACTION_UPDATE_SYNC_STAT,\n    payload,\n});\n\nexport const actionUpdateStatusFetching = (payload: { fetching: boolean }) => ({\n    type: ACTION_UPDATE_STATUS_FETCHING,\n    payload,\n});\n\nexport const actionFetchSyncStat = () => async (dispatch: Dispatch, getState: () => IRootState) => {\n    try {\n        const { node, fetching } = getState().monitorDetail;\n        if (!node) return;\n        if (!fetching) {\n            dispatch(actionUpdateStatusFetching({ fetching: true }));\n        }\n        const { publicKey } = node;\n        const syncStat = NodesSyncStatBuilder(await getSyncStatInfo(publicKey));\n        dispatch(actionUpdateSyncStat({ syncStat }));\n    } catch (e) {\n        console.debug('Fetch sync stats with error: ', e);\n    } finally {\n        dispatch(actionUpdateStatusFetching({ fetching: false }));\n    }\n};\n\nexport const actionUpdateCommitteeInfo = (payload: { committeeInfo: any }) => ({\n    type: ACTION_UPDATE_COMMITTEE_INFO,\n    payload,\n});\n\nexport const actionFetchCommitteeActivity = () => async (dispatch: Dispatch, getState: () => IRootState) => {\n    try {\n        const { node } = getState().monitorDetail;\n        if (!node) return;\n        const { publicKey } = node;\n        const committeeInfo = NodesCommitteeInfoBuilder(await getCommitteeInfo(publicKey));\n        dispatch(actionUpdateCommitteeInfo({ committeeInfo }));\n    } catch (e) {\n        console.debug('Fetch sync stats with error: ', e);\n    } finally {\n        dispatch(actionUpdateStatusFetching({ fetching: false }));\n    }\n};\n\nexport const actionFetchNodeSyncInfo = (publicKey: string) => async (\n    dispatch: Dispatch,\n    getState: () => IRootState,\n) => {\n    try {\n        const node = NodesInfoBuilder(await getListNodesInfo(publicKey));\n        dispatch(actionUpdateMonitorDetail({ node }));\n        await actionFetchSyncStat()(dispatch, getState);\n        await actionFetchCommitteeActivity()(dispatch, getState);\n    } catch (e) {\n        console.debug('Fetch node info error: ', e);\n    }\n};\n","export const MockupColumns: any = [\n    { accessor: 'name', Header: 'Name' },\n    { accessor: 'ellipsisMpk', Header: 'Validator Public key' },\n    { accessor: 'role', Header: 'Role' },\n    { accessor: 'committeeChain', Header: 'Committee Chain' },\n    { accessor: 'status', Header: 'Status' },\n    { accessor: 'syncState', Header: 'Sync State' },\n    { accessor: 'voteStats', Header: 'Vote Stats' },\n];\n\nexport const MockupColumnsCommittee: any = [\n    { accessor: 'epoch', Header: 'Epoch' },\n    { accessor: 'chainId', Header: 'Chain Id' },\n    { accessor: 'reward', Header: 'Reward' },\n    { accessor: 'voteCount', Header: 'Vote Count (%)' },\n];\n\nexport const MockupColumnsBeacon: any = [\n    { accessor: 'name', Header: 'Shard' },\n    { accessor: 'blockHeight', Header: 'Block Height' },\n    { accessor: 'lastInsert', Header: 'Last Insert' },\n];\n","import React, { memo } from 'react';\nimport { CircularProgress } from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst Styled = styled.div`\n    justify-content: center;\n    align-items: center;\n    display: flex;\n`;\n\nconst LoadingOverlay = () => {\n    return (\n        <Styled className=\"wrap-loading\">\n            <CircularProgress color=\"primary\" />\n        </Styled>\n    );\n};\n\nexport default memo(LoadingOverlay);\n","import axios from 'axios';\nimport { API_NODE_MONITOR_URL } from './configs';\n\nconst TIMEOUT = 20000;\nconst instance = axios.create({\n    timeout: TIMEOUT,\n});\n\nconst HEADERS = { 'Content-Type': 'application/json' };\n\ninstance.interceptors.request.use(\n    (req) => {\n        req.baseURL = API_NODE_MONITOR_URL;\n        req.headers = {\n            ...HEADERS,\n            ...req.headers,\n        };\n        return req;\n    },\n    (error) => {\n        Promise.reject(error);\n    },\n);\n\ninstance.interceptors.response.use(\n    (res) => {\n        const result = res?.data;\n        const error = res?.data?.Error;\n        if (error) {\n            return Promise.reject(error);\n        }\n        return Promise.resolve(result);\n    },\n    async (error) => {\n        if (error?.isAxiosError && !error?.response) {\n            throw new Error('Send request API failed');\n        }\n        return Promise.reject(error);\n    },\n);\n\nexport default instance;\n","import http from 'src/services/http';\n\nexport const getListNodesInfo = async (publicKeys: string) => {\n    return http.post('stat', { mpk: publicKeys });\n};\n\nexport const getSyncStatInfo = async (publicKey: string) => {\n    return http.post('sync', { mpk: publicKey });\n};\n\nexport const getCommitteeInfo = async (publicKey: string) => {\n    return http.post('committee', { mpk: publicKey });\n};\n","interface IEllipsis {\n    str: string;\n    limit?: number;\n    dots?: string;\n}\n\nexport const ellipsisCenter = (payload: IEllipsis) => {\n    const { str, limit = 10, dots = '...' }: IEllipsis = payload;\n    try {\n        const size = str.length;\n        if (size < limit * 2 + dots.length) {\n            return str;\n        }\n        const leftStr = str.substring(0, limit);\n        const rightStr = str.substring(size - limit, size);\n        return leftStr + dots + rightStr;\n    } catch {\n        return str;\n    }\n};\n","import { isEmpty, isArray, capitalize } from 'lodash';\nimport moment from 'moment';\nimport { ellipsisCenter } from 'src/utils/ellipsis';\nimport { INodeName, ITableData } from './Table.interface';\nimport { ICommittee, ISyncStat } from '../MonitorDetail/MonitorDetail.interface';\nimport { getVoteStat } from './Table.utils';\nimport { EMPTY_CELL } from './Table.constants';\n\nconst formatNodeInfo = (node: any) => {\n    let role = node?.Role;\n    let committeeChain = node?.CommitteeChain;\n    if (committeeChain === '-1') {\n        committeeChain = 'beacon';\n    }\n    if (isEmpty(node?.Role)) {\n        role = 'Not stake';\n        committeeChain = EMPTY_CELL;\n    }\n\n    return {\n        publicKey: node?.MiningPubkey || EMPTY_CELL,\n        status: capitalize(node?.Status) || EMPTY_CELL,\n        committeeChain,\n        syncState: capitalize(node?.SyncState) || EMPTY_CELL,\n        voteStats: getVoteStat(node?.VoteStat) || EMPTY_CELL,\n        ellipsisMpk: ellipsisCenter({ str: node?.MiningPubkey || '', limit: 20 }) || EMPTY_CELL,\n        role: capitalize(role) || EMPTY_CELL,\n        autoStake: node?.AutoStake,\n    };\n};\n\nexport const NodesListBuilder = (data: any, dataMapper: INodeName[]): ITableData[] => {\n    if (isEmpty(data)) return [];\n    return dataMapper.map((mapper: any) => {\n        const { name: nodeName, publicKey } = mapper;\n        const node = data.find((element: any) => publicKey === element.MiningPubkey) || {};\n        if (isEmpty(node)) {\n            return {\n                name: nodeName || EMPTY_CELL,\n                ...formatNodeInfo({ ...node, MiningPubkey: publicKey }),\n            };\n        }\n        return {\n            name: nodeName || EMPTY_CELL,\n            ...formatNodeInfo({ ...node }),\n        };\n    });\n};\n\nexport const NodesInfoBuilder = (data: any): ITableData | undefined => {\n    if (isEmpty(data) || !isArray(data)) return;\n    const node = data[0];\n    return formatNodeInfo(node);\n};\n\nconst getStatusMessage = (item: any) => {\n    let prefix = '';\n    let suffix = item.IsSync ? 'syncing' : 'not syncing';\n    let color = item.IsSync ? 'green1' : 'text1';\n    if (item?.LastInsert) {\n        prefix += `${moment(item?.LastInsert).fromNow()} `;\n    }\n    if (item.IsSync && (!item?.LastInsert || Date.now() - new Date(item?.LastInsert).getTime() > 60000 * 5)) {\n        suffix = 'stalling';\n        color = 'red1';\n    }\n    const message = `${prefix}${prefix ? ' (' : ''}${suffix}${prefix ? ')' : ''}`;\n    return { message, color };\n};\n\nexport const NodesSyncStatBuilder = (data: any): ISyncStat | undefined => {\n    if (isEmpty(data)) return undefined;\n    const { Shard, Beacon } = data;\n\n    const { message: beaconMessage, color: beaconColor } = getStatusMessage(Beacon);\n\n    let result: any;\n    result = {\n        beacon: {\n            name: 'Beacon',\n            isSync: Beacon.IsSync,\n            lastInsert: Beacon?.LastInsert,\n            blockHeight: Beacon?.BlockHeight,\n            blockTime: Beacon?.BlockTime,\n            blockHash: Beacon?.BlockHash,\n            message: beaconMessage,\n            color: beaconColor,\n        },\n    };\n    result = {\n        ...result,\n        shards: Object.keys(Shard).map((key: string) => {\n            const item = Shard[key];\n            const { message: shardMessage, color: shardStatusColor } = getStatusMessage(item);\n            return {\n                name: `Shard ${key}`,\n                isSync: item?.IsSync,\n                lastInsert: item?.LastInsert,\n                blockHeight: item?.BlockHeight,\n                blockTime: item?.BlockTime,\n                blockHash: item?.BlockHash,\n                chainId: item?.ChainId,\n                message: shardMessage,\n                color: shardStatusColor,\n            };\n        }),\n    };\n    return result;\n};\n\nexport const NodesCommitteeInfoBuilder = (data: any): ICommittee[] | undefined => {\n    if (isEmpty(data)) return undefined;\n    return data.map((item: any) => {\n        let voteCount: any = EMPTY_CELL;\n        if (item?.TotalPropose) {\n            voteCount = Math.round((item?.TotalVote / item?.TotalPropose) * 100);\n        }\n        return {\n            epoch: item?.Epoch || EMPTY_CELL,\n            reward: item?.Reward || EMPTY_CELL,\n            time: item?.Time || EMPTY_CELL,\n            totalPropose: item?.TotalPropose || EMPTY_CELL,\n            totalVote: item?.TotalVote || EMPTY_CELL,\n            voteCount,\n            chainId: item?.ChainID || EMPTY_CELL,\n        };\n    });\n};\n","import isEmpty from 'lodash/isEmpty';\n\ninterface IENVS {\n    REACT_APP_IS_MAINNET: boolean;\n    REACT_APP_VERSION: string;\n    REACT_APP_DOMAIN_URL: string;\n    REACT_APP_IS_DEV: boolean;\n    FAST_REFRESH: boolean;\n}\n\nconst defaultEnvs = {\n    REACT_APP_IS_MAINNET: false,\n    REACT_APP_VERSION: '1.0',\n    REACT_APP_IS_DEV: false,\n    FAST_REFRESH: true,\n};\n\nexport const getEnvs = () => {\n    let envs: any = {};\n    try {\n        const PROCCESS_ENV = process.env;\n        if (!isEmpty(PROCCESS_ENV)) {\n            Object.keys(PROCCESS_ENV).forEach((key: string) => {\n                const value = PROCCESS_ENV[key];\n                if (value === 'true' || value === 'false') {\n                    envs[key] = value === 'true';\n                } else {\n                    envs[key] = PROCCESS_ENV[key];\n                }\n                return key;\n            });\n        }\n    } catch (error) {\n        console.debug(error);\n    } finally {\n        envs = isEmpty(envs) ? defaultEnvs : envs;\n    }\n    return { ...envs, REACT_APP_DOMAIN_URL: window.location.origin };\n};\n\nexport const ENVS: IENVS = getEnvs();\n\nexport const isMainnet: boolean = ENVS.REACT_APP_IS_MAINNET;\n","import { isMainnet } from 'src/configs/Configs.Envs';\n\nexport const API_BASE_URL_DEVICE = isMainnet\n    ? 'https://device-network.incognito.org/'\n    : 'https://device-network-staging.incognito.org/';\n\nexport const API_NODE_BASE_URL = isMainnet ? 'http://139.162.54.236:3333/' : 'http://139.162.54.236:3333/';\n\nexport const API_NODE_MONITOR_URL = `${API_NODE_BASE_URL}pubkeystat/`;\n\nexport const API_NODE_VALIDATOR_URL = isMainnet ? `${API_NODE_BASE_URL}validator/` : `${API_NODE_BASE_URL}validator/`;\n"],"sourceRoot":""}